[tool.poetry]
name = "dsp-compose"
version = "0.1.0"
description = "Whole DSP project for the Fire Department Amsterdam/Amstelland. This package includes all elements for this project: Dagster, MLFlow, Streamlit etc"
authors = ["Stijn Hering <stijn@hering.nl>"]
readme = "README.md"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E501"]
ignore-init-module-imports = true
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []
fix = true


# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 90

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

# [tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
# max-complexity = 10


# [tool.ruff.lint]
# # Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# # Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# # McCabe complexity (`C901`) by default.
# select = ["E4", "E7", "E9", "F"]
# ignore = []

# # Allow fix for all enabled rules (when `--fix`) is provided.
# fixable = ["ALL"]
# unfixable = []

# # Allow unused variables when underscore-prefixed.
# dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# [tool.ruff.format]
# # Like Black, use double quotes for strings.
# quote-style = "double"

# # Like Black, indent with spaces, rather than tabs.
# indent-style = "space"

# # Like Black, respect magic trailing commas.
# skip-magic-trailing-comma = false

# # Like Black, automatically detect the appropriate line ending.
# line-ending = "auto"

# # Enable auto-formatting of code examples in docstrings. Markdown,
# # reStructuredText code/literal blocks and doctests are all supported.
# #
# # This is currently disabled by default, but it is planned for this
# # to be opt-out in the future.
# docstring-code-format = false

# # Set the line length limit used when formatting code snippets in
# # docstrings.
# #
# # This only has an effect when the `docstring-code-format` setting is
# # enabled.
# docstring-code-line-length = "dynamic"


[tool.poetry.dependencies]
python = "^3.10"
streamlit = "^1.29.0"
plotly = "^5.18.0"
faker = "^21.0.0"
dagster = "^1.5.13"
dagster-webserver = "^1.5.13"
dagster-mlflow = "^0.21.13"
dagster-duckdb = "^0.21.13"
dagster-duckdb-pandas = "^0.21.13"
dagster-duckdb-polars = "^0.21.13"
xlsx2csv = "^0.8.2"
openpyxl = "^3.1.2"
asyncio = "^3.4.3"
httpx = "^0.26.0"
geopandas = "^0.14.1"
duckdb = "^0.9.2"
duckdb-engine = "^0.10.0"
jupysql = "^0.10.7"
notebook = "^7.0.6"
xgboost = "^2.0.3"
scikit-learn = "^1.3.2"
ruff = "^0.1.9"
spelling = "^1.2.1"
jupyter = "^1.0.0"
ipykernel = "^6.27.1"
ipython = "^8.19.0"
requests = "^2.30.0"
urllib3 = "^1.26"
requests-toolbelt = "0.10.1"
pygwalker = "^0.3.20"
pre-commit = "^3.6.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
